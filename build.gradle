buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


plugins {
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.donghyeon'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Greenwich.SR2")
}
allprojects {
    group = 'com.donghyeon'
    version = '0.0.1'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation('org.springframework.boot:spring-boot-starter-web')
        runtime group: 'com.netflix.ribbon', name: 'ribbon', version: '2.7.10'
        runtimeOnly('org.springframework.boot:spring-boot-devtools')
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
        // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-server
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '2.0.4.RELEASE'
        // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-zuul
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-zuul', version: '2.0.4.RELEASE'

        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'mysql:mysql-connector-java'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        //common
        implementation 'org.apache.commons:commons-lang3:3.8.1'
        implementation 'com.github.darrachequesne:spring-data-jpa-datatables:5.0.0'
        // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
//        implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

        // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-config-server
        //configSerevr
        compile group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: '2.0.4.RELEASE'
        compile group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '2.0.4.RELEASE'
        implementation('org.springframework.cloud:spring-cloud-starter-parent')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        //


    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }

    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE"
    }
}

project(':worker-configServer') {
    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-webflux')

    }
}


project(':worker-core') {
    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-security')
    }
}

project(':worker-login'){
    dependencies{
        compile project(':worker-core')
        implementation('org.springframework.boot:spring-boot-starter-security')
    }
}

project(':worker-discovery'){
}

project(':worker-zuul'){
}
